<?xml version="1.0"?>

<!-- ============================================= -->
<!--  This WSC is designed to read Echostars       -->
<!--  custom tracking data format (.prt)           -->
<!--                                               -->
<!--  author: jens ramrath                         -->
<!--  date: 14 apr 2010                            -->
<!-- ============================================= -->


<component>

<?component error="true" debug="true"?>

<registration
    description="read indovisions custom tracking format"
    progid="TrkData.Echostar.OD6.wsc"
    version="1.00"
    classid="{43EC0029-B862-4b22-AE9E-6CA80DE8ACE4}">
</registration>

<public>

   <!-- Properties -->

   <property name="FileName">
      <get internalName="GetFileName"/>
   </property>

   <property name="SupportsMultipleTrackers">
      <get internalName="GetSupportsMultipleTrackers"/>
   </property>

   <property name="SupportsSave">
      <get internalName="GetSupportsSave"/>
   </property>

   <!-- Methods -->

   <method name="Reset"/>

   <method name="OpenFile">
      <parameter name="newVal"/>
      <parameter name="newFile"/>
   </method>

   <method name="GetObsSet">
      <parameter name="setCollection"/>
   </method>

   <method name="GetSupportedObsSet">
      <parameter name="setColl"/>
   </method>

   <method name="SaveObs">
      <parameter name="pEnum"/>
      <parameter name="bAppend"/>
   </method>

</public>

<script language="VBScript">
<![CDATA[
	
    '-------------------------------------------------------------------------
    ' Member variables
    '-------------------------------------------------------------------------

    Option explicit

    Const ForReading   = 1
    Const ForWriting   = 2

    Const eMTRange            = 1
    Const eMTDoppler          = 2
    Const eMTAzimuth          = 11
    Const eMTElevation        = 12

    Const eMTRightAscension   = 18
    Const eMTDeclination      = 19
    Const eMTSBRightAscension = 31
    Const eMTSBDeclination    = 32
    Const eMTSBRange          = 33
    Const eMTSBAzimuth        = 34
    Const eMTSBElevation      = 35
    
    Const eMTGPSNav_C1		  = 81

    Const eGroundReceiveTime     = 0
    Const eSatelliteTransmitTime = 1
    Const eGroundTransmitTime    = 2
    Const eSatelliteReceiveTime  = 3
    
    Const eXComp	= 0
    Const eYComp	= 1
    Const eZComp	= 2

    '-------------------------------------------------------------------------
	' define some global variables we'll be using
    '-------------------------------------------------------------------------
	
    Dim m_sfileSysObj, m_Stream, m_sFileName
    
    Set m_sfileSysObj = CreateObject("Scripting.FileSystemObject")
    
    m_sFileName       = ""

    ' Define the speed of light (m/s)

    const AgCSpeedOfLight = 2.997924580000000E+08

    '-------------------------------------------------------------------------
	' define some regular expression objects that we'll be using
    '-------------------------------------------------------------------------
	
    dim oRegExp, oMatches, oMatch
	Set oRegExp = new RegExp

    dim oRegExpSub, oMatchesSub, oMatchSub
	Set oRegExpSub = new RegExp

    '-------------------------------------------------------------------------
	' Create obsSet and obs objects for use later on
    '-------------------------------------------------------------------------
    
    Dim version
    version = "6.0"

    Dim textFile, ObjectStr, versionStr, regValue, ODDBObjectFile
    versionStr = "HKEY_LOCAL_MACHINE\SOFTWARE\AGI\ODTK\" & version & "\InstallHome"
    GetRegKey(versionStr)

    ODDBObjectFile = m_sfileSysObj.Buildpath(regValue, "\ODTK\AppData\Scripts\MeasProviders\WindowsScriptComponents\" & "CreatODDBObjects.txt")
    Set textFile = m_sfileSysObj.OpenTextFile(ODDBObjectFile, ForReading)

    Dim pObsSet
    ObjectStr = textFile.ReadLine               ' ObjectStr = "AgMach10_5.AgODObsSet"  or similar
    Set pObsSet = CreateObject(ObjectStr)


    Dim pObs
    ObjectStr = textFile.ReadLine               ' ObjectStr = "IAgODProvideTrackingData5.AgODGenericObs"  or similar
    Set pObs = CreateObject(ObjectStr)

   '-------------------------------------------------------------------------
   ' Function GetFileName()
   '-------------------------------------------------------------------------
    
    Function GetFileName()

       GetFileName = m_sFileName

    End Function

    '-------------------------------------------------------------------------
    ' SupportsSave property [read-only]
    '-------------------------------------------------------------------------

    Function GetSupportsSave()

       GetSupportsSave = False

    End Function

    '-------------------------------------------------------------------------
    ' SupportsMultipleTrackers property [read-only]
    '-------------------------------------------------------------------------

    Function GetSupportsMultipleTrackers()

       GetSupportsMultipleTrackers = True

    End Function

    '-------------------------------------------------------------------------
    ' Reset method
    '-------------------------------------------------------------------------

    Function Reset()

        if m_sFileName <> "" Then
            
            Dim newVal
            newVal = m_sFileName
            OpenFile newVal, False
            
        End if

    End Function

    '-------------------------------------------------------------------------
    ' OpenFile method
    '-------------------------------------------------------------------------

    Function OpenFile(newVal, newFile)
    
        If m_sFileName <> "" Then
            m_Stream.Close
            m_sFileName = ""
        End If

        m_sFileName = newVal

        If newFile Then        
            Set m_Stream = m_sfileSysObj.OpenTextFile(m_sFileName, ForWriting, True)            
        Else        
            Set m_Stream = m_sfileSysObj.OpenTextFile(m_sFileName, ForReading)			
        End If

    End Function

    '-------------------------------------------------------------------------
    ' GetObsSet method
    '-------------------------------------------------------------------------

    Function GetObsSet(setColl)
        Dim line, data, numSets, description
        Dim date, time, day
        Dim satName, staName, measType
		Dim status, dataValue, dataUnits, estValue, estUnits, noiseValue, noiseUnits, resValue, resUnits

        numSets = 0
        pObsSet.Clear
    
    	Dim debug
    	debug = 0


		Dim satelliteID
		Set satelliteID = CreateObject("Scripting.Dictionary")
		satelliteID.Add "e11", 	1001

		Dim stationID
		Set stationID = CreateObject("Scripting.Dictionary")
		stationID.Add "WAD1", 	1
		stationID.Add "T12", 	2



    	' ***********************
		' ***** read header *****
		' ***********************
		
		' ignore header for now - all the data is in file
		
		if debug <> 0 then
			msgbox("finished reading the header")
		end if


		' *********************
		' ***** read data *****
		' *********************
		line = "null"
		
        Do Until m_Stream.AtEndOfStream   ' Or numSets > 0

            line = m_Stream.ReadLine
            

			' ***** parse measurement data *****
			' sample lines:
			' 2010/03/25 11:31:15.450 e11_032520101131    WAD1   azimuth    accept      169.792000 degs        169.792057 degs      0.0100000000 degs   -5.72524114e-05 degs  
			' 2010/03/25 11:31:15.450 e11_032520101131    WAD1 elevation    accept      34.8650000 degs        34.8633571 degs      0.0100000000 degs     0.00164290581 degs  
			' 2010/03/25 11:31:25.560 e11_032520101131    WAD1   azimuth    accept      169.793000 degs        169.792074 degs      0.0100000000 degs    0.000925793987 degs  
			' 2010/03/25 11:31:25.560 e11_032520101131    WAD1 elevation    accept      34.8650000 degs        34.8633510 degs      0.0100000000 degs     0.00164897342 degs  
			' 2010/03/25 11:31:33.740 e11_032520101131    WAD1     range    accept      38189.9245 km          38189.8954 km          5.00000000 meters      29.0360263 meters



			' ignore blank lines
			if len(line) = 0 then
				' do nothing
				
			' look for comments
			elseif left(line, 1) = "#" then
				' ***** do something?

			' read data
			else
    		
				oRegExp.pattern = "(\S+)\s+(\S+)\s+(\S+)\s+(\S+)\s+(\S+)\s+(\S+)\s+(\S+)\s+(\S+)\s+(\S+)\s+(\S+)\s+(\S+)\s+(\S+)\s+(\S+)\s+(\S+)"
				oRegExp.global = false
				set oMatches = oRegExp.Execute(line)

				if oMatches.Count = 1 then

					day			= oMatches(0).submatches(0)
					time		= oMatches(0).submatches(1)
					satName		= oMatches(0).submatches(2)
					staName		= oMatches(0).submatches(3)
					measType	= oMatches(0).submatches(4)
					status		= oMatches(0).submatches(5)
					dataValue	= oMatches(0).submatches(6)
					dataUnits	= oMatches(0).submatches(7)
					estValue	= oMatches(0).submatches(8)
					estUnits	= oMatches(0).submatches(9)
					noiseValue	= oMatches(0).submatches(10)
					noiseUnits	= oMatches(0).submatches(11)
					resValue	= oMatches(0).submatches(12)
					resUnits	= oMatches(0).submatches(13)
					
					
					' some cleanup
					if dataUnits = "degs" then
						dataUnits = "deg"
					elseif dataUnits = "rads" then
						dataUnits = "rad"
					end if
					
					if resUnits = "degs" then
						resUnits = "deg"
					elseif resUnits = "rads" then
						resUnits = "rad"
					end if
					
					Dim satNameSplit
					satNameSplit = split(satName, "_")
					satName = satNameSplit(0)
					
					'-------------------------------------------------------------------------
					' Reassemble the date into a YYYY/MM/DD format
					'-------------------------------------------------------------------------
					date = day & " " & time

					'-------------------------------------------------------------------------
					' Initialize observation and obs set
					'-------------------------------------------------------------------------
					pObsSet.Clear()
					pObsSet.Date.unit = "YYYY/MM/DD"
					pObsSet.Date      = date

					'-------------------------------------------------------------------------
					' Initialize observation
					'-------------------------------------------------------------------------
					pObs.Date.unit = "YYYY/MM/DD"
					pObs.Date      = date
					pObs.TimeOrigin = eGroundReceiveTime


					'-------------------------------------------------------------------------
					' Set up facility and satellite IDs
					' In TrackerIDs list: facility must come first
					'-------------------------------------------------------------------------
					pObs.TrackerIDs.Clear()
					pObs.TrackerIDs.Insert 0, stationID(staName)  		' Facility must be first item
					pObs.TrackerIDs.Insert 1, satelliteID(satName)	' Satellite follows Facility


					if measType = "azimuth" then	
						pObs.MeasureType	= eMTAzimuth
						pObs.Value.Unit		= dataUnits
						pObs.Value.Value	= dataValue
						pObsSet.Add pObs
					elseif measType = "elevation" then
						pObs.MeasureType	= eMTElevation
						pObs.Value.Unit		= dataUnits
						pObs.Value.Value	= dataValue
						pObsSet.Add pObs
					elseif measType = "range" then
						pObs.MeasureType	= eMTRange
						pObs.Value.Unit		= dataUnits
						pObs.Value.Value	= dataValue
						pObsSet.Add pObs
					end if

					if debug <> 0 then
						msgbox("Time: " & date & (Chr(13) & Chr(10)) & "Measurement: " & pObs.MeasureType & (Chr(13) & Chr(10)) & " value: " & pObs.Value.Value & " " & pObs.Value.Unit & (Chr(13) & Chr(10)) & stationID(stationName) & " to " & satelliteID(spacecraftName))
					end if


					'-------------------------------------------------------------------------
					' Any Valid Meas? 
					'-------------------------------------------------------------------------

					If pObsSet.Count > 0 Then
						numSets = numSets + 1
						setColl.Add pObsSet
					End If
					
				End If
					
        	End If
		Loop
		
		
        GetObsSet = numSets
        
		if debug <> 0 then
			msgbox("at end of GetObsSet")
		end if
		
    End Function

    '-------------------------------------------------------------------------
    ' GetSupportedObsSet method
    '-------------------------------------------------------------------------

    Function GetSupportedObsSet(setColl)
	    Dim numSets
        numSets = 0
        GetSupportedObsSet = numSets
    End Function

    '-------------------------------------------------------------------------
    ' SaveObs method
    '-------------------------------------------------------------------------

    Function SaveObs(pEnum, bAppend)
	    Dim nObsSaved
        nObsSaved = 0
        SaveObs = nObsSaved
    End Function


    Function GetRegKey (regKey)
        Dim objShell
        Set objShell = CreateObject("WScript.Shell")
        regValue = objShell.RegRead(regKey)
        Set objShell = nothing
    End Function

]]>
</script>

</component>

