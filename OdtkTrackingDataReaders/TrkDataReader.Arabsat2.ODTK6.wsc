<?xml version="1.0"?>

<!-- ===================================================== -->
<!--  ODTK data reader for arabsat                         -->
<!--                                                       -->
<!--  author: jens ramrath, 11 mar 2015                    -->
<!-- ===================================================== -->


<component>

<?component error="true" debug="true"?>

<registration
    description="Arabsat Format 2"
    progid="TrkDataReader.Arabsat2.ODTK6.wsc"
    version="1.00"
    classid="{BCACC77E-2015-4ce8-9B2D-1DA3F429A146}"
>
</registration>

<public>

   <!-- Properties -->

   <property name="FileName">
      <get internalName="GetFileName"/>
   </property>

   <property name="SupportsMultipleTrackers">
      <get internalName="GetSupportsMultipleTrackers"/>
   </property>

   <property name="SupportsSave">
      <get internalName="GetSupportsSave"/>
   </property>

   <!-- Methods -->

   <method name="Reset"/>

   <method name="OpenFile">
      <parameter name="newVal"/>
      <parameter name="newFile"/>
   </method>

  <method name="CloseFile"/>

  <method name="GetObsSet">
      <parameter name="setCollection"/>
   </method>

   <method name="GetSupportedObsSet">
      <parameter name="setColl"/>
   </method>

   <method name="SaveObs">
      <parameter name="pEnum"/>
      <parameter name="bAppend"/>
   </method>

   <method name="GetRegKey"/>

</public>

<script language="VBScript">
<![CDATA[

    '-------------------------------------------------------------------------
    ' Member variables
    '-------------------------------------------------------------------------

    Option explicit

    Const ForReading   = 1
    Const ForWriting   = 2
    Const ForAppending = 8

    Const eMTRange            = 1
    Const eMTDoppler          = 2
    Const eMTAzimuth          = 11
    Const eMTElevation        = 12

    Const eMTRightAscension   = 18
    Const eMTDeclination      = 19
    Const eMTSBRightAscension = 31
    Const eMTSBDeclination    = 32
    Const eMTSBRange          = 33
    Const eMTSBAzimuth        = 34
    Const eMTSBElevation      = 35

    Const eGroundReceiveTime     = 0
    Const eSatelliteTransmitTime = 1
    Const eGroundTransmitTime    = 2
    Const eSatelliteReceiveTime  = 3

    '-------------------------------------------------------------------------
	' define some global variables we'll be using
    '-------------------------------------------------------------------------

    Dim m_sfileSysObj, m_Stream, m_sFileName, m_Satellite, m_Tracker

    Set m_sfileSysObj = CreateObject("Scripting.FileSystemObject")

    m_sFileName = ""

    '-------------------------------------------------------------------------
	' define some regular expression objects that we'll be using
    '-------------------------------------------------------------------------

    dim oRegExp, oMatches, oMatch

	Set oRegExp = new RegExp

    '-------------------------------------------------------------------------
	' Create obsSet and obs objects for use later on
    '-------------------------------------------------------------------------

    Dim version
    version = "6.0"

    Dim textFile, ObjectStr, versionStr, regValue, ODDBObjectFile
    versionStr = "HKEY_LOCAL_MACHINE\SOFTWARE\AGI\ODTK\" & version & "\InstallHome"
    GetRegKey(versionStr)

    ODDBObjectFile = m_sfileSysObj.Buildpath(regValue, "\ODTK\AppData\Scripts\MeasProviders\WindowsScriptComponents\" & "CreatODDBObjects.txt")
    Set textFile = m_sfileSysObj.OpenTextFile(ODDBObjectFile, ForReading)

    Dim pObsSet
    ObjectStr = textFile.ReadLine               ' ObjectStr = "AgMach10_5.AgODObsSet"  or similar

    Set pObsSet = CreateObject(ObjectStr)


    Dim pObs
    ObjectStr = textFile.ReadLine               ' ObjectStr = "IAgODProvideTrackingData5.AgODGenericObs"  or similar
    Set pObs = CreateObject(ObjectStr)

	'-------------------------------------------------------------------------
	' Define look up tables to translate names to ID numbers
    '-------------------------------------------------------------------------

	Dim satIDs
	Set satIDs = CreateObject("Scripting.Dictionary")
	satIDs.Add "AB5C", "1001" 

      		

	Dim facIDs
	Set facIDs = CreateObject("Scripting.Dictionary")
	facIDs.Add "C3", "501"
	facIDs.Add "CF", "502"
	facIDs.Add "CL", "503"
	facIDs.Add "C2", "504"
	facIDs.Add "KF", "505"
	
	facIDs.Add "S1", "506"
	facIDs.Add "S2", "507"
	facIDs.Add "S3", "508"
	facIDs.Add "S4", "509"
	facIDs.Add "S5", "510"
	

   '-------------------------------------------------------------------------
   ' Function GetFileName()
   '-------------------------------------------------------------------------

    Function GetFileName()

       GetFileName = m_sFileName

    End Function

    '-------------------------------------------------------------------------
    ' SupportsSave property [read-only]
    '-------------------------------------------------------------------------

    Function GetSupportsSave()

       GetSupportsSave = False

    End Function

    '-------------------------------------------------------------------------
    ' SupportsMultipleTrackers property [read-only]
    '-------------------------------------------------------------------------

    Function GetSupportsMultipleTrackers()

       GetSupportsMultipleTrackers = True

    End Function

    '-------------------------------------------------------------------------
    ' Reset method
    '-------------------------------------------------------------------------

    Function Reset()

        if m_sFileName <> "" Then

            Dim newVal
            newVal = m_sFileName
            OpenFile newVal, False

        End if

    End Function

    '-------------------------------------------------------------------------
    ' OpenFile method
    '-------------------------------------------------------------------------

    Function OpenFile(newVal, newFile)

		dim line

        If m_sFileName <> "" Then
            m_Stream.Close
            m_sFileName = ""
        End If

        m_sFileName = newVal

        If newFile Then
            Set m_Stream = m_sfileSysObj.OpenTextFile(m_sFileName, ForWriting, True)
        Else
            Set m_Stream = m_sfileSysObj.OpenTextFile(m_sFileName, ForReading)

			'-------------------------------------------------------------------------
			' Read header information to find the satellite ID and the tracker ID
			'-------------------------------------------------------------------------

			Dim filePathSplit
			filePathSplit = Split(m_sFileName, "\")
			
			Dim fileNameSplit
			fileNameSplit = Split(filePathSplit(Ubound(filePathSplit)), "_")
	   
		   	' check if filename starts with ABS
		   	if UBound(fileNameSplit) < 2 then
		   		msgbox("the filename was not of the expected format. The reader expects ""<satelliteID>_xxx_<tracker ID>.xxx"" where xxx can be any arbitrary text")
		   		Wscript.Quit
			end if

			Dim trackerSplit
			trackerSplit = Split(fileNameSplit(Ubound(fileNameSplit)), ".")

			m_Satellite     = fileNameSplit(0)
			m_Tracker		= trackerSplit(0)
		End If

    End Function

	'-------------------------------------------------------------------------
    ' CloseFile method
    '-------------------------------------------------------------------------

    Function CloseFile()

        If m_sFileName <> "" Then
            m_Stream.Close
            m_sFileName = ""
        End If

    End Function

    '-------------------------------------------------------------------------
    ' GetObsSet method
    '-------------------------------------------------------------------------

    Function GetObsSet(setColl)

        dim line, datetime, obsval, station
        dim meas_type, groundequip, antenna, calstatus, numObsSets
        dim day, month, year, time, ra, dec, az, el

		pObsSet.Clear()
		numObsSets = 0


		'-------------------------------------------------------------------------
		' parse the line (see sample below)
		'
		' Date | Heure | RA (°) | DEC (°) | Az (°) | Apparent El (°)
		' 19/2/2015 23:0:5.358000 167.649895 -6.470033 147.745980 34.375338
		' 19/2/2015 23:0:10.364500 167.670881 -6.469926 147.745850 34.375403
		' 19/2/2015 23:0:15.357000 167.691526 -6.470166 147.746202 34.375258
		' 19/2/2015 23:0:20.372000 167.712496 -6.470077 147.746140 34.375327
		'
		'-------------------------------------------------------------------------
		
		oRegExp.pattern  = "(\d+)/(\d+)/(\d+)\s+(\S+)\s+(\S+)\s+(\S+)\s+(\S+)\s+(\S+)\s*"

        Do Until m_Stream.AtEndOfStream or numObsSets > 0

            line = m_Stream.ReadLine
            set oMatches = oRegExp.Execute(line)

            if oMatches.Count = 1 then

                day         = oMatches(0).submatches(0)
                month       = oMatches(0).submatches(1)
                year        = oMatches(0).submatches(2)
                time        = oMatches(0).submatches(3)
                ra          = oMatches(0).submatches(4)
                dec         = oMatches(0).submatches(5)
                az          = oMatches(0).submatches(6)
                el          = oMatches(0).submatches(7)

				dateTime = year & "/" & month & "/" & day & " " & time

				pObsSet.Clear()
				pObsSet.Date.unit = "YYYY/MM/DD"
				pObsSet.Date      = dateTime

				'-------------------------------------------------------------------------
				' Initialize observation
				'-------------------------------------------------------------------------

				pObs.Date.unit  = "YYYY/MM/DD"
				pObs.Date       = datetime
				pObs.TimeOrigin = eGroundReceiveTime

				'-------------------------------------------------------------------------
				' Set up facility and satellite IDs. Facility must come first for 2-way ranging.
				'-------------------------------------------------------------------------
	
				pObs.TrackerIDs.Clear()
				pObs.TrackerIDs.Insert 0, m_Tracker			' Facility must be first item
				pObs.TrackerIDs.Insert 1, m_Satellite 		' Satellite follows Facility


				pObs.MeasureType  = eMTRightAscension
				pObs.value.Unit   = "deg"
				pObs.value        = ra
				pObsSet.Add pObs

				pObs.MeasureType  = eMTDeclination
				pObs.value.Unit   = "deg"
				pObs.value        = dec
				pObsSet.Add pObs


				If pObsSet.Count > 0 Then
					setColl.Add pObsSet
					numObsSets = numObsSets + 1
				End If

        	End If

		Loop

        GetObsSet = numObsSets

    End Function  ' GetObsSet

    '-------------------------------------------------------------------------
    ' GetSupportedObsSet method
    '-------------------------------------------------------------------------

    Function GetSupportedObsSet(setColl)
	    Dim numSets
        numSets = 0
        GetSupportedObsSet = numSets
    End Function

    '-------------------------------------------------------------------------
    ' SaveObs method
    '-------------------------------------------------------------------------

    Function SaveObs(pEnum, bAppend)
	    Dim nObsSaved
        nObsSaved = 0
        SaveObs = nObsSaved
    End Function


    Function GetRegKey (regKey)
        Dim objShell
        Set objShell = CreateObject("WScript.Shell")
        regValue = objShell.RegRead(regKey)
        Set objShell = nothing
    End Function

]]>
</script>

</component>

