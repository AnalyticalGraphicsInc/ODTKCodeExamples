<?xml version="1.0"?>

<!-- ============================================= -->
<!--  This WSC is designed to read MIT LL          -->
<!--  tracking data 						       -->
<!--                                               -->
<!--  author: jens ramrath                         -->
<!--  date: 6 may 2019                             -->
<!-- ============================================= -->


<component>

<?component error="true" debug="true"?>

<registration
    description="STK fixed ephemeris file format"
    progid="TrkData.MIT.LL.wsc"
    version="1.00"
    classid="{460895A1-B329-4001-9CA7-427BD921C0F9}"
>
</registration>

<public>

   <!-- Properties -->

   <property name="FileName">
      <get internalName="GetFileName"/>
   </property>

   <property name="SupportsMultipleTrackers">
      <get internalName="GetSupportsMultipleTrackers"/>
   </property>

   <property name="SupportsSave">
      <get internalName="GetSupportsSave"/>
   </property>

   <!-- Methods -->

   <method name="Reset"/>

   <method name="OpenFile">
      <parameter name="newVal"/>
      <parameter name="newFile"/>
   </method>

   <method name="GetObsSet">
      <parameter name="setCollection"/>
   </method>

   <method name="GetSupportedObsSet">
      <parameter name="setColl"/>
   </method>

   <method name="SaveObs">
      <parameter name="pEnum"/>
      <parameter name="bAppend"/>
   </method>

</public>

<script language="VBScript">
<![CDATA[
	
    '-------------------------------------------------------------------------
    ' Member variables
    '-------------------------------------------------------------------------

    Option explicit

    Const ForReading   = 1
    Const ForWriting   = 2

    Const eMTRange            = 1
    Const eMTDoppler          = 2
    Const eMTAzimuth          = 11
    Const eMTElevation        = 12

    Const eMTRightAscension   = 18
    Const eMTDeclination      = 19
    Const eMTSBRightAscension = 31
    Const eMTSBDeclination    = 32
    Const eMTSBRange          = 33
    Const eMTSBAzimuth        = 34
    Const eMTSBElevation      = 35
    
    Const eMTGPSNav_C1		  = 81

    Const eGroundReceiveTime     = 0
    Const eSatelliteTransmitTime = 1
    Const eGroundTransmitTime    = 2
    Const eSatelliteReceiveTime  = 3
    
    Const eXComp	= 0
    Const eYComp	= 1
    Const eZComp	= 2

    '-------------------------------------------------------------------------
	' define some global variables we'll be using
    '-------------------------------------------------------------------------
	
    Dim m_sfileSysObj, m_Stream, m_sFileName
    
    Set m_sfileSysObj = CreateObject("Scripting.FileSystemObject")
    
    m_sFileName       = ""

    ' Define the speed of light (m/s)

    const AgCSpeedOfLight = 2.997924580000000E+08

    '-------------------------------------------------------------------------
	' define some regular expression objects that we'll be using
    '-------------------------------------------------------------------------
	
    dim oRegExp, oMatches, oMatch
	Set oRegExp = new RegExp

    dim oRegExpSub, oMatchesSub, oMatchSub
	Set oRegExpSub = new RegExp

    '-------------------------------------------------------------------------
	' Create obsSet and obs objects for use later on
    '-------------------------------------------------------------------------
    
    Dim version
    version = "6.0"

    Dim textFile, ObjectStr, versionStr, regValue, ODDBObjectFile
    versionStr = "HKEY_LOCAL_MACHINE\SOFTWARE\AGI\ODTK\" & version & "\InstallHome"
    GetRegKey(versionStr)

    ODDBObjectFile = m_sfileSysObj.Buildpath(regValue, "\ODTK\AppData\Scripts\MeasProviders\WindowsScriptComponents\" & "CreatODDBObjects.txt")
    Set textFile = m_sfileSysObj.OpenTextFile(ODDBObjectFile, ForReading)

    Dim pObsSet
    ObjectStr = textFile.ReadLine               ' ObjectStr = "AgMach10_5.AgODObsSet"  or similar
    Set pObsSet = CreateObject(ObjectStr)


    Dim pObs
    ObjectStr = textFile.ReadLine               ' ObjectStr = "IAgODProvideTrackingData5.AgODGenericObs"  or similar
    Set pObs = CreateObject(ObjectStr)

   '-------------------------------------------------------------------------
   ' Function GetFileName()
   '-------------------------------------------------------------------------
    
    Function GetFileName()

       GetFileName = m_sFileName

    End Function

    '-------------------------------------------------------------------------
    ' SupportsSave property [read-only]
    '-------------------------------------------------------------------------

    Function GetSupportsSave()

       GetSupportsSave = False

    End Function

    '-------------------------------------------------------------------------
    ' SupportsMultipleTrackers property [read-only]
    '-------------------------------------------------------------------------

    Function GetSupportsMultipleTrackers()

       GetSupportsMultipleTrackers = True

    End Function

    '-------------------------------------------------------------------------
    ' Reset method
    '-------------------------------------------------------------------------

    Function Reset()

        if m_sFileName <> "" Then
            
            Dim newVal
            newVal = m_sFileName
            OpenFile newVal, False
            
        End if

    End Function

    '-------------------------------------------------------------------------
    ' OpenFile method
    '-------------------------------------------------------------------------

    Function OpenFile(newVal, newFile)
    
        If m_sFileName <> "" Then
            m_Stream.Close
            m_sFileName = ""
        End If

        m_sFileName = newVal

        If newFile Then        
            Set m_Stream = m_sfileSysObj.OpenTextFile(m_sFileName, ForWriting, True)            
        Else        
            Set m_Stream = m_sfileSysObj.OpenTextFile(m_sFileName, ForReading)			
        End If

    End Function

    '-------------------------------------------------------------------------
    ' GetObsSet method
    '-------------------------------------------------------------------------

    Function GetObsSet(setColl)
        dim line, numSets

        numSets = 0
        pObsSet.Clear
    
    	Dim debug
    	debug = 0


		Dim stationID
		Set stationID = CreateObject("Scripting.Dictionary")
		stationID.Add "0.0", 			400
		stationID.Add "-29.690349", 	401
		

    	' ***********************
		' ***** read header *****
		' ***********************
		Dim stationName
		Dim satelliteName
		Dim timeUnits
		
		Dim fileType
		Dim fileFormat
		Dim genDate
		
		
		
		' *********************
		' ***** read data *****
		' *********************

        Do Until m_Stream.AtEndOfStream

            line = m_Stream.ReadLine

			' ***** parse measurement data *****
			' sample lines:
			' 58558.000029780436,-29.690349,17.817735,199.179723537,5.0023800125,11.593175,32294,0.809
			' 58558.000029780436,-29.690349,17.817735,199.69135941,5.0071063693,11.229565,39233,0.809
			' 58558.000029780436,-29.690349,17.817735,200.1270482485,4.9880915226,10.865307,43700,0.809
			' 
			' column 0: UTC MJD
			' column 1: latitude of tracking site
			' column 2: longitude of tracking site
			' column 3: RA
			' column 4: Dec
			' column 6: target ID


			if Len(line) > 0 AND left(line, 1) <> "#" then

				Dim lineSplit
				Dim dateTime, lat, lon, ra, dec, satID
				
				lineSplit = Split(line, ",")
				
				dateTime	= lineSplit(0)
				lat 		= lineSplit(1)
				lon			= lineSplit(2)
				ra			= lineSplit(3)
				dec			= lineSplit(4)
				satID		= lineSplit(6)

'msgbox(dateTime & " " & lat & "/" & lon & " " & ra & "/" & dec & " " & satID)

				'-------------------------------------------------------------------------
				' Initialize observation and obs set
				'-------------------------------------------------------------------------

				pObsSet.Clear()
				pObsSet.Date.unit = "ModJDate"
				pObsSet.Date      = dateTime

				'-------------------------------------------------------------------------
				' Initialize observation
				'-------------------------------------------------------------------------

				pObs.Date.unit = "ModJDate"
				pObs.Date      = dateTime
				pObs.TimeOrigin = eGroundReceiveTime


				pObs.TrackerIDs.Clear()
				pObs.TrackerIDs.Insert 0, stationID(lat)  			' Facility must be first item
				pObs.TrackerIDs.Insert 1, satID						' Satellite follows Facility


				pObs.MeasureType	= eMTRightAscension
				pObs.Value.Unit		= "deg"
				pObs.Value.Value	= ra
				pObsSet.Add pObs

				pObs.MeasureType	= eMTDeclination
				pObs.Value.Unit		= "deg"
				pObs.Value.Value	= dec
				pObsSet.Add pObs



				'-------------------------------------------------------------------------
				' Any Valid Meas? 
				'-------------------------------------------------------------------------

				If pObsSet.Count > 0 Then
					numSets = numSets + 1
					setColl.Add pObsSet
				End If

					
        	End If
		Loop
		
		
        GetObsSet = numSets
        
		if debug <> 0 then
			msgbox("at end of GetObsSet")
		end if
		
    End Function

    '-------------------------------------------------------------------------
    ' GetSupportedObsSet method
    '-------------------------------------------------------------------------

    Function GetSupportedObsSet(setColl)
	    Dim numSets
        numSets = 0
        GetSupportedObsSet = numSets
    End Function

    '-------------------------------------------------------------------------
    ' SaveObs method
    '-------------------------------------------------------------------------

    Function SaveObs(pEnum, bAppend)
	    Dim nObsSaved
        nObsSaved = 0
        SaveObs = nObsSaved
    End Function


    Function GetRegKey (regKey)
        Dim objShell
        Set objShell = CreateObject("WScript.Shell")
        regValue = objShell.RegRead(regKey)
        Set objShell = nothing
    End Function

]]>
</script>

</component>

